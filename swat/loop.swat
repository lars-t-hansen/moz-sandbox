;;; -*- mode: scheme -*-

(defmodule Loop

  (defun- (pri32 (n i32)))

  (defun+ (run (n i32))
    (loop A
	  (pri32 n)
	  (if (zero? n) (break A))
	  (pri32 n)
	  (dec! n)))

  (defun+ (run2 (n i32))
    (loop A
	  (pri32 n)
	  (if (zero? n) (break A))
	  (pri32 n)
	  (dec! n)
	  (continue A))))

(js "
Loop.compile().then(function(module) {
  {
    let results = [];
    let ins = new WebAssembly.Instance(module, {'':{pri32:(x) => results.push(x)}, lib:Loop.lib}).exports;
    ins.run(5);
    assertEq(results.length, 11);
    let expected = [5,5,4,4,3,3,2,2,1,1,0];
    for (let i=0; i < 11; i++)
        assertEq(results[i], expected[i]);
  }
  {
    let results = [];
    let ins = new WebAssembly.Instance(module, {'':{pri32:(x) => results.push(x)}, lib:Loop.lib}).exports;
    ins.run2(5);
    assertEq(results.length, 11);
    let expected = [5,5,4,4,3,3,2,2,1,1,0];
    for (let i=0; i < 11; i++)
        assertEq(results[i], expected[i]);
  }
},
function(err) { throw err })
")
